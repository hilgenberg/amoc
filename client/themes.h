#pragma once

enum color_index
{
	CLR_BACKGROUND,
	CLR_FRAME,
	CLR_WIN_TITLE,
	CLR_PANEL_DIR,
	CLR_PANEL_DIR_SELECTED,
	CLR_PANEL_PLAYLIST,
	CLR_PANEL_PLAYLIST_SELECTED,
	CLR_PANEL_FILE,
	CLR_PANEL_FILE_SELECTED,
	CLR_PANEL_FILE_MARKED,
	CLR_PANEL_FILE_MARKED_SELECTED,
	CLR_PANEL_INFO,
	CLR_PANEL_INFO_SELECTED,
	CLR_PANEL_INFO_MARKED,
	CLR_PANEL_INFO_MARKED_SELECTED,
	CLR_STATUS,
	CLR_TITLE,
	CLR_STATE,
	CLR_TIME_CURRENT,
	CLR_TIME_LEFT,
	CLR_TIME_TOTAL,
	CLR_TIME_TOTAL_FRAMES,
	CLR_SOUND_PARAMS,
	CLR_LEGEND,
	CLR_INFO_DISABLED,
	CLR_INFO_ENABLED,
	CLR_MIXER_BAR_EMPTY,
	CLR_MIXER_BAR_FILL,
	CLR_TIME_BAR_EMPTY,
	CLR_TIME_BAR_FILL,
	CLR_ENTRY,
	CLR_ENTRY_TITLE,
	CLR_ERROR,
	CLR_MESSAGE,
	CLR_PLIST_TIME,
	CLR_MENU_ITEM,
	CLR_MENU_SELECTED,
	CLR_MENU_GREY,
	CLR_MENU_GREY_SELECTED,
	CLR_LAST /* Fake element to get number of colors */
};

void theme_init ();
int get_color (color_index);
